// Generated by view binder compiler. Do not edit!
package com.example.vocabapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.vocabapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView age;

  @NonNull
  public final TextView ageTextView;

  @NonNull
  public final Button changePasswordButton;

  @NonNull
  public final TextView displayName;

  @NonNull
  public final CircleImageView displayPhoto;

  @NonNull
  public final Button editProfileButton;

  @NonNull
  public final TextView exp;

  @NonNull
  public final TextView expTextView;

  @NonNull
  public final ImageButton imageBackButton;

  @NonNull
  public final Button logOut;

  @NonNull
  public final Button privacyPolicy;

  @NonNull
  public final Button termOfUse;

  private ActivityUserBinding(@NonNull ConstraintLayout rootView, @NonNull TextView age,
      @NonNull TextView ageTextView, @NonNull Button changePasswordButton,
      @NonNull TextView displayName, @NonNull CircleImageView displayPhoto,
      @NonNull Button editProfileButton, @NonNull TextView exp, @NonNull TextView expTextView,
      @NonNull ImageButton imageBackButton, @NonNull Button logOut, @NonNull Button privacyPolicy,
      @NonNull Button termOfUse) {
    this.rootView = rootView;
    this.age = age;
    this.ageTextView = ageTextView;
    this.changePasswordButton = changePasswordButton;
    this.displayName = displayName;
    this.displayPhoto = displayPhoto;
    this.editProfileButton = editProfileButton;
    this.exp = exp;
    this.expTextView = expTextView;
    this.imageBackButton = imageBackButton;
    this.logOut = logOut;
    this.privacyPolicy = privacyPolicy;
    this.termOfUse = termOfUse;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.age;
      TextView age = rootView.findViewById(id);
      if (age == null) {
        break missingId;
      }

      id = R.id.age_text_view;
      TextView ageTextView = rootView.findViewById(id);
      if (ageTextView == null) {
        break missingId;
      }

      id = R.id.change_password_button;
      Button changePasswordButton = rootView.findViewById(id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.display_name;
      TextView displayName = rootView.findViewById(id);
      if (displayName == null) {
        break missingId;
      }

      id = R.id.display_photo;
      CircleImageView displayPhoto = rootView.findViewById(id);
      if (displayPhoto == null) {
        break missingId;
      }

      id = R.id.edit_profile_button;
      Button editProfileButton = rootView.findViewById(id);
      if (editProfileButton == null) {
        break missingId;
      }

      id = R.id.exp;
      TextView exp = rootView.findViewById(id);
      if (exp == null) {
        break missingId;
      }

      id = R.id.exp_text_view;
      TextView expTextView = rootView.findViewById(id);
      if (expTextView == null) {
        break missingId;
      }

      id = R.id.image_back_button;
      ImageButton imageBackButton = rootView.findViewById(id);
      if (imageBackButton == null) {
        break missingId;
      }

      id = R.id.log_out;
      Button logOut = rootView.findViewById(id);
      if (logOut == null) {
        break missingId;
      }

      id = R.id.privacy_policy;
      Button privacyPolicy = rootView.findViewById(id);
      if (privacyPolicy == null) {
        break missingId;
      }

      id = R.id.term_of_use;
      Button termOfUse = rootView.findViewById(id);
      if (termOfUse == null) {
        break missingId;
      }

      return new ActivityUserBinding((ConstraintLayout) rootView, age, ageTextView,
          changePasswordButton, displayName, displayPhoto, editProfileButton, exp, expTextView,
          imageBackButton, logOut, privacyPolicy, termOfUse);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
