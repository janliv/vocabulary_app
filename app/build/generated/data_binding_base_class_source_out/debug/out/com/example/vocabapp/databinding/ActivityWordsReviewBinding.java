// Generated by view binder compiler. Do not edit!
package com.example.vocabapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.vocabapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWordsReviewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView AAnswerBox;

  @NonNull
  public final ImageView BAnswerBox;

  @NonNull
  public final ImageView CAnswerBox;

  @NonNull
  public final ImageView DAnswerBox;

  @NonNull
  public final TextView ansA;

  @NonNull
  public final TextView ansB;

  @NonNull
  public final TextView ansC;

  @NonNull
  public final TextView ansD;

  @NonNull
  public final ImageButton backtolearn;

  @NonNull
  public final ImageView meaningHolder;

  @NonNull
  public final TextView meaningView;

  @NonNull
  public final ImageButton nextMeaning;

  @NonNull
  public final ImageButton shuffle;

  @NonNull
  public final TextView title;

  private ActivityWordsReviewBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView AAnswerBox, @NonNull ImageView BAnswerBox, @NonNull ImageView CAnswerBox,
      @NonNull ImageView DAnswerBox, @NonNull TextView ansA, @NonNull TextView ansB,
      @NonNull TextView ansC, @NonNull TextView ansD, @NonNull ImageButton backtolearn,
      @NonNull ImageView meaningHolder, @NonNull TextView meaningView,
      @NonNull ImageButton nextMeaning, @NonNull ImageButton shuffle, @NonNull TextView title) {
    this.rootView = rootView;
    this.AAnswerBox = AAnswerBox;
    this.BAnswerBox = BAnswerBox;
    this.CAnswerBox = CAnswerBox;
    this.DAnswerBox = DAnswerBox;
    this.ansA = ansA;
    this.ansB = ansB;
    this.ansC = ansC;
    this.ansD = ansD;
    this.backtolearn = backtolearn;
    this.meaningHolder = meaningHolder;
    this.meaningView = meaningView;
    this.nextMeaning = nextMeaning;
    this.shuffle = shuffle;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWordsReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWordsReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_words_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWordsReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.A_answer_box;
      ImageView AAnswerBox = rootView.findViewById(id);
      if (AAnswerBox == null) {
        break missingId;
      }

      id = R.id.B_answer_box;
      ImageView BAnswerBox = rootView.findViewById(id);
      if (BAnswerBox == null) {
        break missingId;
      }

      id = R.id.C_answer_box;
      ImageView CAnswerBox = rootView.findViewById(id);
      if (CAnswerBox == null) {
        break missingId;
      }

      id = R.id.D_answer_box;
      ImageView DAnswerBox = rootView.findViewById(id);
      if (DAnswerBox == null) {
        break missingId;
      }

      id = R.id.ans_A;
      TextView ansA = rootView.findViewById(id);
      if (ansA == null) {
        break missingId;
      }

      id = R.id.ans_B;
      TextView ansB = rootView.findViewById(id);
      if (ansB == null) {
        break missingId;
      }

      id = R.id.ans_C;
      TextView ansC = rootView.findViewById(id);
      if (ansC == null) {
        break missingId;
      }

      id = R.id.ans_D;
      TextView ansD = rootView.findViewById(id);
      if (ansD == null) {
        break missingId;
      }

      id = R.id.backtolearn;
      ImageButton backtolearn = rootView.findViewById(id);
      if (backtolearn == null) {
        break missingId;
      }

      id = R.id.meaning_holder;
      ImageView meaningHolder = rootView.findViewById(id);
      if (meaningHolder == null) {
        break missingId;
      }

      id = R.id.meaningView;
      TextView meaningView = rootView.findViewById(id);
      if (meaningView == null) {
        break missingId;
      }

      id = R.id.next_meaning;
      ImageButton nextMeaning = rootView.findViewById(id);
      if (nextMeaning == null) {
        break missingId;
      }

      id = R.id.shuffle;
      ImageButton shuffle = rootView.findViewById(id);
      if (shuffle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new ActivityWordsReviewBinding((RelativeLayout) rootView, AAnswerBox, BAnswerBox,
          CAnswerBox, DAnswerBox, ansA, ansB, ansC, ansD, backtolearn, meaningHolder, meaningView,
          nextMeaning, shuffle, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
